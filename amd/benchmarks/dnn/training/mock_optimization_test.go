// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sarchlab/mgpusim/v4/amd/benchmarks/dnn/training/optimization (interfaces: Alg)
//
// Generated by this command:
//
//	mockgen -destination mock_optimization_test.go -package training -write_package_comment=false github.com/sarchlab/mgpusim/v4/amd/benchmarks/dnn/training/optimization Alg
//

package training

import (
	reflect "reflect"

	optimization "github.com/sarchlab/mgpusim/v4/amd/benchmarks/dnn/training/optimization"
	gomock "go.uber.org/mock/gomock"
)

// MockAlg is a mock of Alg interface.
type MockAlg struct {
	ctrl     *gomock.Controller
	recorder *MockAlgMockRecorder
	isgomock struct{}
}

// MockAlgMockRecorder is the mock recorder for MockAlg.
type MockAlgMockRecorder struct {
	mock *MockAlg
}

// NewMockAlg creates a new mock instance.
func NewMockAlg(ctrl *gomock.Controller) *MockAlg {
	mock := &MockAlg{ctrl: ctrl}
	mock.recorder = &MockAlgMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlg) EXPECT() *MockAlgMockRecorder {
	return m.recorder
}

// UpdateParameters mocks base method.
func (m *MockAlg) UpdateParameters(l optimization.Layer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateParameters", l)
}

// UpdateParameters indicates an expected call of UpdateParameters.
func (mr *MockAlgMockRecorder) UpdateParameters(l any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateParameters", reflect.TypeOf((*MockAlg)(nil).UpdateParameters), l)
}
