// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sarchlab/mgpusim/v4/benchmarks/dnn/layers (interfaces: Layer)

package training

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	tensor "github.com/sarchlab/mgpusim/v4/benchmarks/dnn/tensor"
)

// MockLayer is a mock of Layer interface.
type MockLayer struct {
	ctrl     *gomock.Controller
	recorder *MockLayerMockRecorder
}

// MockLayerMockRecorder is the mock recorder for MockLayer.
type MockLayerMockRecorder struct {
	mock *MockLayer
}

// NewMockLayer creates a new mock instance.
func NewMockLayer(ctrl *gomock.Controller) *MockLayer {
	mock := &MockLayer{ctrl: ctrl}
	mock.recorder = &MockLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLayer) EXPECT() *MockLayerMockRecorder {
	return m.recorder
}

// Backward mocks base method.
func (m *MockLayer) Backward(arg0 tensor.Tensor) tensor.Tensor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Backward", arg0)
	ret0, _ := ret[0].(tensor.Tensor)
	return ret0
}

// Backward indicates an expected call of Backward.
func (mr *MockLayerMockRecorder) Backward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Backward", reflect.TypeOf((*MockLayer)(nil).Backward), arg0)
}

// Forward mocks base method.
func (m *MockLayer) Forward(arg0 tensor.Tensor) tensor.Tensor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Forward", arg0)
	ret0, _ := ret[0].(tensor.Tensor)
	return ret0
}

// Forward indicates an expected call of Forward.
func (mr *MockLayerMockRecorder) Forward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Forward", reflect.TypeOf((*MockLayer)(nil).Forward), arg0)
}

// Gradients mocks base method.
func (m *MockLayer) Gradients() tensor.Tensor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Gradients")
	ret0, _ := ret[0].(tensor.Tensor)
	return ret0
}

// Gradients indicates an expected call of Gradients.
func (mr *MockLayerMockRecorder) Gradients() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Gradients", reflect.TypeOf((*MockLayer)(nil).Gradients))
}

// Parameters mocks base method.
func (m *MockLayer) Parameters() tensor.Tensor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parameters")
	ret0, _ := ret[0].(tensor.Tensor)
	return ret0
}

// Parameters indicates an expected call of Parameters.
func (mr *MockLayerMockRecorder) Parameters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parameters", reflect.TypeOf((*MockLayer)(nil).Parameters))
}

// Randomize mocks base method.
func (m *MockLayer) Randomize() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Randomize")
}

// Randomize indicates an expected call of Randomize.
func (mr *MockLayerMockRecorder) Randomize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Randomize", reflect.TypeOf((*MockLayer)(nil).Randomize))
}
